// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: file.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileCommand_Operation int32

const (
	FileCommand_TRANSFER FileCommand_Operation = 0
	FileCommand_DELETE   FileCommand_Operation = 1
)

// Enum value maps for FileCommand_Operation.
var (
	FileCommand_Operation_name = map[int32]string{
		0: "TRANSFER",
		1: "DELETE",
	}
	FileCommand_Operation_value = map[string]int32{
		"TRANSFER": 0,
		"DELETE":   1,
	}
)

func (x FileCommand_Operation) Enum() *FileCommand_Operation {
	p := new(FileCommand_Operation)
	*p = x
	return p
}

func (x FileCommand_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileCommand_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_file_proto_enumTypes[0].Descriptor()
}

func (FileCommand_Operation) Type() protoreflect.EnumType {
	return &file_file_proto_enumTypes[0]
}

func (x FileCommand_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileCommand_Operation.Descriptor instead.
func (FileCommand_Operation) EnumDescriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{7, 0}
}

type SnapshotChunk struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Data              []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ChunkIndex        int64                  `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	IsLast            bool                   `protobuf:"varint,3,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`
	Term              int64                  `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId          int64                  `protobuf:"varint,5,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LastIncludedIndex int64                  `protobuf:"varint,6,opt,name=last_included_index,json=lastIncludedIndex,proto3" json:"last_included_index,omitempty"`
	LastIncludedTerm  int64                  `protobuf:"varint,7,opt,name=last_included_term,json=lastIncludedTerm,proto3" json:"last_included_term,omitempty"`
	Checksum          string                 `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SnapshotChunk) Reset() {
	*x = SnapshotChunk{}
	mi := &file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotChunk) ProtoMessage() {}

func (x *SnapshotChunk) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotChunk.ProtoReflect.Descriptor instead.
func (*SnapshotChunk) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *SnapshotChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SnapshotChunk) GetChunkIndex() int64 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *SnapshotChunk) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *SnapshotChunk) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *SnapshotChunk) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *SnapshotChunk) GetLastIncludedIndex() int64 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *SnapshotChunk) GetLastIncludedTerm() int64 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *SnapshotChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type SnapshotAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Term          int64                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotAck) Reset() {
	*x = SnapshotAck{}
	mi := &file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotAck) ProtoMessage() {}

func (x *SnapshotAck) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotAck.ProtoReflect.Descriptor instead.
func (*SnapshotAck) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotAck) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   int64                  `protobuf:"varint,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *VoteRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteRequest) GetCandidateId() int64 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *VoteRequest) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteRequest) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *VoteResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type AppendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      int64                  `protobuf:"varint,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries       []*LogEntry            `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	mi := &file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *AppendRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendRequest) GetLeaderId() int64 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *AppendRequest) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendRequest) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendRequest) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	mi := &file_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{5}
}

func (x *AppendResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Command       []byte                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{6}
}

func (x *LogEntry) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type FileCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            FileCommand_Operation  `protobuf:"varint,1,opt,name=op,proto3,enum=proto.FileCommand_Operation" json:"op,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	TargetNode    string                 `protobuf:"bytes,4,opt,name=target_node,json=targetNode,proto3" json:"target_node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileCommand) Reset() {
	*x = FileCommand{}
	mi := &file_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCommand) ProtoMessage() {}

func (x *FileCommand) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCommand.ProtoReflect.Descriptor instead.
func (*FileCommand) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{7}
}

func (x *FileCommand) GetOp() FileCommand_Operation {
	if x != nil {
		return x.Op
	}
	return FileCommand_TRANSFER
}

func (x *FileCommand) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileCommand) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileCommand) GetTargetNode() string {
	if x != nil {
		return x.TargetNode
	}
	return ""
}

type TransferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	mi := &file_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{8}
}

func (x *TransferResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        int64                  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LastIndex     int64                  `protobuf:"varint,3,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{9}
}

func (x *JoinRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *JoinRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *JoinRequest) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Term          int64                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{10}
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_file_proto protoreflect.FileDescriptor

const file_file_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"file.proto\x12\x05proto\"\x88\x02\n" +
	"\rSnapshotChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1f\n" +
	"\vchunk_index\x18\x02 \x01(\x03R\n" +
	"chunkIndex\x12\x17\n" +
	"\ais_last\x18\x03 \x01(\bR\x06isLast\x12\x12\n" +
	"\x04term\x18\x04 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x05 \x01(\x03R\bleaderId\x12.\n" +
	"\x13last_included_index\x18\x06 \x01(\x03R\x11lastIncludedIndex\x12,\n" +
	"\x12last_included_term\x18\a \x01(\x03R\x10lastIncludedTerm\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\";\n" +
	"\vSnapshotAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x03R\x04term\"\x8e\x01\n" +
	"\vVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fcandidate_id\x18\x02 \x01(\x03R\vcandidateId\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x03R\vlastLogTerm\"E\n" +
	"\fVoteResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fvote_granted\x18\x02 \x01(\bR\vvoteGranted\"\xda\x01\n" +
	"\rAppendRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\x03R\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x03R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x03R\vprevLogTerm\x12)\n" +
	"\aentries\x18\x05 \x03(\v2\x0f.proto.LogEntryR\aentries\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x03R\fleaderCommit\">\n" +
	"\x0eAppendResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"8\n" +
	"\bLogEntry\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\acommand\x18\x02 \x01(\fR\acommand\"\xb1\x01\n" +
	"\vFileCommand\x12,\n" +
	"\x02op\x18\x01 \x01(\x0e2\x1c.proto.FileCommand.OperationR\x02op\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12\x1f\n" +
	"\vtarget_node\x18\x04 \x01(\tR\n" +
	"targetNode\"%\n" +
	"\tOperation\x12\f\n" +
	"\bTRANSFER\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01\"F\n" +
	"\x10TransferResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\vJoinRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\x03R\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"last_index\x18\x03 \x01(\x03R\tlastIndex\"<\n" +
	"\fJoinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x03R\x04term2\xb7\x02\n" +
	"\vRaftService\x126\n" +
	"\vRequestVote\x12\x12.proto.VoteRequest\x1a\x13.proto.VoteResponse\x12<\n" +
	"\rAppendEntries\x12\x14.proto.AppendRequest\x1a\x15.proto.AppendResponse\x12;\n" +
	"\fTransferFile\x12\x12.proto.FileCommand\x1a\x17.proto.TransferResponse\x12=\n" +
	"\x0fInstallSnapshot\x12\x14.proto.SnapshotChunk\x1a\x12.proto.SnapshotAck(\x01\x126\n" +
	"\vJoinCluster\x12\x12.proto.JoinRequest\x1a\x13.proto.JoinResponseB\tZ\a./protob\x06proto3"

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData []byte
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)))
	})
	return file_file_proto_rawDescData
}

var file_file_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_file_proto_goTypes = []any{
	(FileCommand_Operation)(0), // 0: proto.FileCommand.Operation
	(*SnapshotChunk)(nil),      // 1: proto.SnapshotChunk
	(*SnapshotAck)(nil),        // 2: proto.SnapshotAck
	(*VoteRequest)(nil),        // 3: proto.VoteRequest
	(*VoteResponse)(nil),       // 4: proto.VoteResponse
	(*AppendRequest)(nil),      // 5: proto.AppendRequest
	(*AppendResponse)(nil),     // 6: proto.AppendResponse
	(*LogEntry)(nil),           // 7: proto.LogEntry
	(*FileCommand)(nil),        // 8: proto.FileCommand
	(*TransferResponse)(nil),   // 9: proto.TransferResponse
	(*JoinRequest)(nil),        // 10: proto.JoinRequest
	(*JoinResponse)(nil),       // 11: proto.JoinResponse
}
var file_file_proto_depIdxs = []int32{
	7,  // 0: proto.AppendRequest.entries:type_name -> proto.LogEntry
	0,  // 1: proto.FileCommand.op:type_name -> proto.FileCommand.Operation
	3,  // 2: proto.RaftService.RequestVote:input_type -> proto.VoteRequest
	5,  // 3: proto.RaftService.AppendEntries:input_type -> proto.AppendRequest
	8,  // 4: proto.RaftService.TransferFile:input_type -> proto.FileCommand
	1,  // 5: proto.RaftService.InstallSnapshot:input_type -> proto.SnapshotChunk
	10, // 6: proto.RaftService.JoinCluster:input_type -> proto.JoinRequest
	4,  // 7: proto.RaftService.RequestVote:output_type -> proto.VoteResponse
	6,  // 8: proto.RaftService.AppendEntries:output_type -> proto.AppendResponse
	9,  // 9: proto.RaftService.TransferFile:output_type -> proto.TransferResponse
	2,  // 10: proto.RaftService.InstallSnapshot:output_type -> proto.SnapshotAck
	11, // 11: proto.RaftService.JoinCluster:output_type -> proto.JoinResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		EnumInfos:         file_file_proto_enumTypes,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
